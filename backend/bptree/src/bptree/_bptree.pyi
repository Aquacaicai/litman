from typing import TypeVar, List, Optional

KeyT = TypeVar('KeyT', int, str)
ValT = TypeVar('ValT', int, str, List[int])


class BPTreeIntStr:
    def __init__(self, order: int) -> None: ...
    def insert(self, _key: int, _val: str) -> None: ...
    def erase(self, _key: int) -> None: ...
    def update(self, _key: int, _new_val: str) -> bool: ...
    def find(self, _key: int) -> Optional[str]: ...
    def deserialize(self, filename: str) -> None: ...
    def serialize(self, filename: str) -> None: ...
    def getAllKeys(self) -> List[int]: ...
    def getAllValues(self) -> List[str]: ...


class BPTreeIntVecInt:
    def __init__(self, order: int) -> None: ...
    def insert(self, _key: int, _val: List[int]) -> None: ...
    def erase(self, _key: int) -> None: ...
    def update(self, _key: int, _new_val: List[int]) -> bool: ...
    def find(self, _key: int) -> Optional[List[int]]: ...
    def deserialize(self, filename: str) -> None: ...
    def serialize(self, filename: str) -> None: ...
    def getAllKeys(self) -> List[int]: ...
    def getAllValues(self) -> List[List[int]]: ...


class BPTreeWStrInt:
    def __init__(self, order: int) -> None: ...
    def insert(self, _key: str, _val: int) -> None: ...
    def erase(self, _key: str) -> None: ...
    def update(self, _key: str, _new_val: int) -> bool: ...
    def find(self, _key: str) -> Optional[int]: ...
    def deserialize(self, filename: str) -> None: ...
    def serialize(self, filename: str) -> None: ...
    def getAllKeys(self) -> List[str]: ...
    def getAllValues(self) -> List[int]: ...


class BPTreeWStrVecInt:
    def __init__(self, order: int) -> None: ...
    def insert(self, _key: str, _val: List[int]) -> None: ...
    def erase(self, _key: str) -> None: ...
    def update(self, _key: str, _new_val: List[int]) -> bool: ...
    def find(self, _key: str) -> Optional[List[int]]: ...
    def deserialize(self, filename: str) -> None: ...
    def serialize(self, filename: str) -> None: ...
    def getAllKeys(self) -> List[str]: ...
    def getAllValues(self) -> List[List[int]]: ...
